#!/bin/bash
# Tool to generate lore content using local Llama model via Ollama

set -e

# Load library functions and paths
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source "${SCRIPT_DIR}/../config/lib.sh"
source "${SCRIPT_DIR}/../config/paths.sh"

# Load environment variables from skogcli config
load_skogcli_env

# Configuration from environment or defaults
MODEL_NAME=${LORE_LLM_MODEL:-${1:-"llama3"}}

# Ensure Ollama is installed
if ! command -v ollama &> /dev/null; then
    echo "Ollama not found. Please install it first:"
    echo "curl -fsSL https://ollama.com/install.sh | sh"
    exit 1
fi

# Check if model exists
if ! ollama list | grep -q "$MODEL_NAME"; then
    echo "Model '$MODEL_NAME' not found. Pulling it now..."
    ollama pull $MODEL_NAME
fi

# Function to generate lore entry
generate_lore_entry() {
    local title="$1"
    local category="$2"
    
    echo "Generating lore entry: $title ($category)"
    echo "Using model: $MODEL_NAME"
    
    # Prompt for lore generation
    PROMPT="Create a detailed lore entry about '$title'. This should be high-quality fantasy/sci-fi lore content for a '$category'.
    
    Your response should include:
    - Rich descriptive details
    - Interesting connections to potential other lore elements
    - Unique characteristics or features
    - Historical significance if relevant
    
    Write 2-3 paragraphs of rich, evocative content."
    
    # Run Ollama to generate content
    CONTENT=$(ollama run $MODEL_NAME "$PROMPT")
    
    # Create temporary file for content
    TEMP_FILE=$(mktemp)
    echo "$CONTENT" > "$TEMP_FILE"
    
    # Create lore entry using the management tool
    "${SKOGAI_LORE}/tools/manage-lore.sh" create-entry "$title" "$category"

    # Get the ID of the newly created entry
    ENTRY_ID=$(ls -t "${SKOGAI_LORE}/knowledge/expanded/lore/entries/" | head -n 1 | sed 's/\.json//')
    
    # Update the entry with the generated content
    jq --arg content "$CONTENT" \
       --arg summary "Generated by $MODEL_NAME" \
       '.content = $content | .summary = $summary' \
       "${SKOGAI_LORE}/knowledge/expanded/lore/entries/$ENTRY_ID.json" > "${TEMP_FILE}.json"

    mv "${TEMP_FILE}.json" "${SKOGAI_LORE}/knowledge/expanded/lore/entries/$ENTRY_ID.json"
    
    # Clean up temp file
    rm "$TEMP_FILE"
    
    echo "Created lore entry: $ENTRY_ID"
    echo "Use ./tools/manage-lore.sh show-entry $ENTRY_ID to view it"
    
    # Return the entry ID
    echo "$ENTRY_ID"
}

# Function to generate persona
generate_persona() {
    local name="$1"
    local description="$2"
    
    echo "Generating persona: $name"
    echo "Description: $description"
    echo "Using model: $MODEL_NAME"
    
    # Prompt for persona traits generation
    PROMPT="Generate personality traits and voice characteristics for a character named '$name' who is '$description'.
    
    Format your response exactly like this:
    TRAITS: trait1,trait2,trait3,trait4
    VOICE: concise description of voice and speaking style
    
    Be creative and make sure traits are comma-separated without spaces."
    
    # Run Ollama to generate traits
    RESPONSE=$(ollama run $MODEL_NAME "$PROMPT")
    
    # Extract traits and voice using helper function
    TRAITS=$(extract_key_value_i "$RESPONSE" "TRAITS")
    VOICE=$(extract_key_value_i "$RESPONSE" "VOICE")
    
    if [ -z "$TRAITS" ] || [ -z "$VOICE" ]; then
        echo "Failed to parse model output. Using default values."
        TRAITS="mysterious,magical,enigmatic,wise"
        VOICE="eloquent and mystical"
    fi
    
    # Create persona using the management tool
    "${SKOGAI_LORE}/tools/create-persona.sh" create "$name" "$description" "$TRAITS" "$VOICE"

    # Get the ID of the newly created persona
    PERSONA_ID=$(ls -t "${SKOGAI_LORE}/knowledge/expanded/personas/" | head -n 1 | sed 's/\.json//')
    
    echo "Created persona: $PERSONA_ID"
    echo "Use ./tools/create-persona.sh show $PERSONA_ID to view it"
    
    # Return the persona ID
    echo "$PERSONA_ID"
}

# Function to create a lorebook
generate_lorebook() {
    local title="$1"
    local description="$2"
    local entry_count="$3"
    
    echo "Generating lorebook: $title"
    echo "Description: $description"
    echo "Number of entries: $entry_count"
    echo "Using model: $MODEL_NAME"
    
    # Create the lorebook
    "${SKOGAI_LORE}/tools/manage-lore.sh" create-book "$title" "$description"

    # Get the ID of the newly created book
    BOOK_ID=$(ls -t "${SKOGAI_LORE}/knowledge/expanded/lore/books/" | head -n 1 | sed 's/\.json//')
    
    # Generate prompt for entry titles
    PROMPT="Generate $entry_count unique and interesting lore entry titles for a fantasy/sci-fi world called '$title'. $description
    
    Format your response exactly like this, numbered list:
    1. [Category: place/character/object/event] Entry Title
    2. [Category: place/character/object/event] Entry Title
    
    Categories MUST be one of: place, character, object, event, concept"
    
    # Run Ollama to generate entry titles
    ENTRIES=$(ollama run $MODEL_NAME "$PROMPT")
    
    # Create each entry and add to book
    echo "$ENTRIES" | grep -E '^\d+\.' | while read -r line; do
        # Extract category and title
        CATEGORY=$(echo "$line" | grep -oE '\[Category: [^]]+\]' | sed 's/\[Category: //;s/\]//')
        TITLE=$(echo "$line" | sed 's/^[0-9]\+\. \[Category: [^]]\+\] //')
        
        # Default category if not parsed correctly
        if [ -z "$CATEGORY" ]; then
            CATEGORY="custom"
        fi
        
        # Create entry
        if [ ! -z "$TITLE" ]; then
            ENTRY_ID=$(generate_lore_entry "$TITLE" "$CATEGORY")
            
            # Add to book
            "${SKOGAI_LORE}/tools/manage-lore.sh" add-to-book "$ENTRY_ID" "$BOOK_ID"
            
            echo "Added entry '$TITLE' to book"
        fi
    done
    
    echo "Lorebook $BOOK_ID created with generated entries"
    echo "Use ./tools/manage-lore.sh show-book $BOOK_ID to view it"
}

# Function to associate a persona with lore
link_persona_with_lore() {
    local persona_id="$1"
    local book_count=${2:-1}
    
    # Get existing books or create new ones if needed
    BOOKS=($("${SKOGAI_LORE}/tools/manage-lore.sh" list-books | grep -v "No lore books found" | grep -oE 'book_[0-9_]+' | head -n $book_count))

    if [ ${#BOOKS[@]} -lt $book_count ]; then
        # Generate a new book if we don't have enough
        PERSONA_NAME=$("${SKOGAI_LORE}/tools/create-persona.sh" show "$persona_id" | grep "=== Persona:" | sed 's/=== Persona: //' | sed 's/ ===//')
        
        BOOK_TITLE="${PERSONA_NAME}'s Chronicles"
        BOOK_DESCRIPTION="A collection of lore relevant to ${PERSONA_NAME}"
        
        generate_lorebook "$BOOK_TITLE" "$BOOK_DESCRIPTION" 3

        # Get the new book ID
        NEW_BOOK=$(ls -t "${SKOGAI_LORE}/knowledge/expanded/lore/books/" | head -n 1 | sed 's/\.json//')
        BOOKS+=($NEW_BOOK)
    fi
    
    # Link each book to the persona
    for book_id in "${BOOKS[@]}"; do
        "${SKOGAI_LORE}/tools/manage-lore.sh" link-to-persona "$book_id" "$persona_id"
        echo "Linked book $book_id to persona $persona_id"
    done
}

# Show help info
show_help() {
    echo "Llama Lore Creator - Generate lore content using local LLM"
    echo ""
    echo "Usage: $0 [model_name] [command] [options]"
    echo ""
    echo "Commands:"
    echo "  entry \"Title\" \"category\"            Generate a lore entry"
    echo "  persona \"Name\" \"Description\"       Generate a persona with traits"  
    echo "  lorebook \"Title\" \"Desc\" count      Generate a lorebook with entries"
    echo "  link persona_id [book_count]         Link persona to lore books"
    echo "  help                                 Show this help message"
    echo ""
    echo "Example:"
    echo "  $0 llama3 entry \"The Crystal Forest\" \"place\""
    echo "  $0 mistral persona \"Elara\" \"An elven sorceress\""
    echo "  $0 llama3 lorebook \"Eldoria\" \"A magical realm\" 5"
}

# Main command processing
case "$2" in
    entry)
        generate_lore_entry "$3" "$4"
        ;;
    persona)
        generate_persona "$3" "$4"
        ;;
    lorebook)
        generate_lorebook "$3" "$4" "${5:-3}"
        ;;
    link)
        link_persona_with_lore "$3" "$4"
        ;;
    help|--help|-h|"")
        show_help
        ;;
    *)
        echo "Unknown command: $2"
        echo "Run '$0 help' for usage information."
        exit 1
        ;;
esac